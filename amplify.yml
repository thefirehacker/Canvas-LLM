version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Injecting environment variables..."
        - |
          cat > config.js << EOF
          // Configuration loader for SketchPad-SLM (Auto-generated by Amplify)
          class Config {
            constructor() {
              // Environment variables injected at build time
              this.GA4_MEASUREMENT_ID = '${GA4_MEASUREMENT_ID}' || 'G-XXXXXXXXXX';
              this.SITE_NAME = '${SITE_NAME}' || 'SketchPad-SLM';
              this.SITE_URL = '${SITE_URL}' || window.location.origin;
              this.GA4_DEBUG_MODE = ${GA4_DEBUG_MODE} || false;
              this.GA4_ANONYMIZE_IP = ${GA4_ANONYMIZE_IP} || true;
            }

            // Method to initialize Google Analytics
            initializeGA4() {
              if (!this.GA4_MEASUREMENT_ID || this.GA4_MEASUREMENT_ID === 'G-XXXXXXXXXX') {
                console.warn('GA4_MEASUREMENT_ID not configured');
                return;
              }

              // Load Google Analytics script
              const script1 = document.createElement('script');
              script1.async = true;
              script1.src = \`https://www.googletagmanager.com/gtag/js?id=\${this.GA4_MEASUREMENT_ID}\`;
              document.head.appendChild(script1);

              // Initialize gtag
              window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              window.gtag = gtag;
              
              gtag('js', new Date());
              gtag('config', this.GA4_MEASUREMENT_ID, {
                anonymize_ip: this.GA4_ANONYMIZE_IP,
                debug_mode: this.GA4_DEBUG_MODE,
                site_name: this.SITE_NAME
              });

              console.log(\`âœ… Google Analytics 4 initialized with ID: \${this.GA4_MEASUREMENT_ID}\`);
            }

            // Method to track custom events
            trackEvent(action, category = 'engagement', label = '', value = 0) {
              if (window.gtag) {
                gtag('event', action, {
                  event_category: category,
                  event_label: label,
                  value: value
                });
                console.log(\`ðŸ“Š GA4 Event tracked: \${action} (\${category})\`);
              }
            }

            // Method to track page views
            trackPageView(page_title, page_location) {
              if (window.gtag) {
                gtag('event', 'page_view', {
                  page_title: page_title,
                  page_location: page_location
                });
              }
            }
          }

          // Create global config instance
          window.AppConfig = new Config();
          EOF
    build:
      commands:
        - echo "Build completed - config.js generated with environment variables"
  artifacts:
    baseDirectory: .
    files:
      - '**/*'
  cache:
    paths: []
  headers:
    - pattern: '**/*'
      headers:
        # Content Security Policy - Allow unsafe-eval for Monaco Editor and p5.js code execution
        Content-Security-Policy: >
          script-src 'self' 'unsafe-eval' 'unsafe-inline' https://cdn.jsdelivr.net https://unpkg.com;
          style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net;
          connect-src 'self' https://api.openai.com https://www.googletagmanager.com https://www.google-analytics.com https://beluga.bubblspace.com http://localhost:1234 http://localhost:11434;
          img-src 'self' data: https: blob:;
          font-src 'self' data: https://cdn.jsdelivr.net;
          worker-src 'self' blob: data:;
          object-src 'none';
          base-uri 'self';
        # Additional security headers
        X-Frame-Options: DENY
        X-Content-Type-Options: nosniff
        Referrer-Policy: strict-origin-when-cross-origin
        Permissions-Policy: "camera=(), microphone=(), geolocation=()" 